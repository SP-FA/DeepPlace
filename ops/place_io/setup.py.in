##
# @file   setup.py.in
# @author Yibo Lin
# @date   Jun 2018
# @brief  For CMake to generate setup.py file 
#

import os
import sys 
import copy
from setuptools import setup
import torch 
from torch.utils.cpp_extension import BuildExtension, CppExtension

os.environ["CC"] = "${CMAKE_C_COMPILER}"
os.environ["CXX"] = "${CMAKE_CXX_COMPILER}"

limbo_source_dir = "${LIMBO_SOURCE_DIR}"
limbo_binary_dir = "${LIMBO_BINARY_DIR}"

include_dirs = [os.path.abspath(limbo_source_dir), '${OPS_DIR}', '${Boost_INCLUDE_DIRS}', '${ZLIB_INCLUDE_DIRS}']
lib_dirs = [os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/parsers/lef/adapt'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/parsers/def/adapt'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/parsers/bookshelf/bison'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/parsers/verilog/bison'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/parsers/gdsii/stream'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/programoptions'), 
        os.path.join(os.path.abspath(limbo_binary_dir), 'limbo/thirdparty/gzstream'), 
        '${Boost_LIBRARY_DIRS}', os.path.dirname('${ZLIB_LIBRARIES}'), '${UTILITY_LIBRARY_DIRS}']
libs = ['lefparseradapt', 'defparseradapt', 'verilogparser', 'gdsparser', 'bookshelfparser', 'programoptions', 
#'boost_system', 'boost_timer', 'boost_chrono', 
'gzstream', 'z', 'utility'] 

tokens = str(torch.__version__).split('.')
torch_major_version = "-DTORCH_MAJOR_VERSION=%d" % (int(tokens[0]))
torch_minor_version = "-DTORCH_MINOR_VERSION=%d" % (int(tokens[1]))

def add_prefix(filename):
    return os.path.join('${CMAKE_CURRENT_SOURCE_DIR}/src', filename)

setup(
        name='place_io',
        ext_modules=[
            CppExtension('place_io_cpp', 
                [
                    add_prefix('BenchMetrics.cpp'),  
                    add_prefix('BinMap.cpp'),  
                    add_prefix('Enums.cpp'),  
                    add_prefix('Net.cpp'),  
                    add_prefix('Node.cpp'),  
                    add_prefix('Region.cpp'),  
                    add_prefix('Group.cpp'),  
                    add_prefix('Params.cpp'),  
                    add_prefix('PlaceDB.cpp'),  
                    add_prefix('DefWriter.cpp'),
                    add_prefix('BookshelfWriter.cpp'),
                    add_prefix('PyPlaceDB.cpp'),  
                    add_prefix('PybindPlaceDB.cpp'),  
                    add_prefix('PybindPyPlaceDB.cpp'),  
                    add_prefix('place_io.cpp'),  
                    ],
                include_dirs=copy.deepcopy(include_dirs), 
                library_dirs=copy.deepcopy(lib_dirs),
                libraries=copy.deepcopy(libs),
                extra_compile_args={
                    'cxx': ['-fvisibility=hidden', torch_major_version, torch_minor_version], 
                    }
                ),
            ],
        cmdclass={
            'build_ext': BuildExtension
            })
